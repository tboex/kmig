// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.3
// source: kmig.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Messages
// Singeplayer
type SinglePlayerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SinglePlayerRequest) Reset() {
	*x = SinglePlayerRequest{}
	mi := &file_kmig_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SinglePlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SinglePlayerRequest) ProtoMessage() {}

func (x *SinglePlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kmig_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SinglePlayerRequest.ProtoReflect.Descriptor instead.
func (*SinglePlayerRequest) Descriptor() ([]byte, []int) {
	return file_kmig_proto_rawDescGZIP(), []int{0}
}

func (x *SinglePlayerRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type SinglePlayerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GameId        string                 `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	GameState     string                 `protobuf:"bytes,3,opt,name=game_state,json=gameState,proto3" json:"game_state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SinglePlayerResponse) Reset() {
	*x = SinglePlayerResponse{}
	mi := &file_kmig_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SinglePlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SinglePlayerResponse) ProtoMessage() {}

func (x *SinglePlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kmig_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SinglePlayerResponse.ProtoReflect.Descriptor instead.
func (*SinglePlayerResponse) Descriptor() ([]byte, []int) {
	return file_kmig_proto_rawDescGZIP(), []int{1}
}

func (x *SinglePlayerResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SinglePlayerResponse) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *SinglePlayerResponse) GetGameState() string {
	if x != nil {
		return x.GameState
	}
	return ""
}

// Multiplayer
type MultiplayerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MultiplayerRequest) Reset() {
	*x = MultiplayerRequest{}
	mi := &file_kmig_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultiplayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiplayerRequest) ProtoMessage() {}

func (x *MultiplayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kmig_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiplayerRequest.ProtoReflect.Descriptor instead.
func (*MultiplayerRequest) Descriptor() ([]byte, []int) {
	return file_kmig_proto_rawDescGZIP(), []int{2}
}

func (x *MultiplayerRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type MultiplayerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        string                 `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	InviteUrl     string                 `protobuf:"bytes,3,opt,name=invite_url,json=inviteUrl,proto3" json:"invite_url,omitempty"` // e.g., "https://kmig.com/join/{game_id}"
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MultiplayerResponse) Reset() {
	*x = MultiplayerResponse{}
	mi := &file_kmig_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultiplayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiplayerResponse) ProtoMessage() {}

func (x *MultiplayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kmig_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiplayerResponse.ProtoReflect.Descriptor instead.
func (*MultiplayerResponse) Descriptor() ([]byte, []int) {
	return file_kmig_proto_rawDescGZIP(), []int{3}
}

func (x *MultiplayerResponse) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *MultiplayerResponse) GetInviteUrl() string {
	if x != nil {
		return x.InviteUrl
	}
	return ""
}

func (x *MultiplayerResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type JoinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GameId        string                 `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	mi := &file_kmig_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kmig_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_kmig_proto_rawDescGZIP(), []int{4}
}

func (x *JoinRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *JoinRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type JoinResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	GameId        string                 `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	GameState     string                 `protobuf:"bytes,3,opt,name=game_state,json=gameState,proto3" json:"game_state,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinResponse) Reset() {
	*x = JoinResponse{}
	mi := &file_kmig_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinResponse) ProtoMessage() {}

func (x *JoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kmig_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinResponse.ProtoReflect.Descriptor instead.
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return file_kmig_proto_rawDescGZIP(), []int{5}
}

func (x *JoinResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *JoinResponse) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *JoinResponse) GetGameState() string {
	if x != nil {
		return x.GameState
	}
	return ""
}

func (x *JoinResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// General Actions
type GameStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        string                 `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameStateRequest) Reset() {
	*x = GameStateRequest{}
	mi := &file_kmig_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStateRequest) ProtoMessage() {}

func (x *GameStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kmig_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStateRequest.ProtoReflect.Descriptor instead.
func (*GameStateRequest) Descriptor() ([]byte, []int) {
	return file_kmig_proto_rawDescGZIP(), []int{6}
}

func (x *GameStateRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type GameStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        string                 `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Players       []string               `protobuf:"bytes,2,rep,name=players,proto3" json:"players,omitempty"`
	UsedWords     []string               `protobuf:"bytes,3,rep,name=used_words,json=usedWords,proto3" json:"used_words,omitempty"`
	CurrentTurn   string                 `protobuf:"bytes,4,opt,name=current_turn,json=currentTurn,proto3" json:"current_turn,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"` // "active", "completed"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameStateResponse) Reset() {
	*x = GameStateResponse{}
	mi := &file_kmig_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStateResponse) ProtoMessage() {}

func (x *GameStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kmig_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStateResponse.ProtoReflect.Descriptor instead.
func (*GameStateResponse) Descriptor() ([]byte, []int) {
	return file_kmig_proto_rawDescGZIP(), []int{7}
}

func (x *GameStateResponse) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *GameStateResponse) GetPlayers() []string {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *GameStateResponse) GetUsedWords() []string {
	if x != nil {
		return x.UsedWords
	}
	return nil
}

func (x *GameStateResponse) GetCurrentTurn() string {
	if x != nil {
		return x.CurrentTurn
	}
	return ""
}

func (x *GameStateResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type WordSubmission struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GameId        string                 `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Word          string                 `protobuf:"bytes,3,opt,name=word,proto3" json:"word,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WordSubmission) Reset() {
	*x = WordSubmission{}
	mi := &file_kmig_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WordSubmission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordSubmission) ProtoMessage() {}

func (x *WordSubmission) ProtoReflect() protoreflect.Message {
	mi := &file_kmig_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordSubmission.ProtoReflect.Descriptor instead.
func (*WordSubmission) Descriptor() ([]byte, []int) {
	return file_kmig_proto_rawDescGZIP(), []int{8}
}

func (x *WordSubmission) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WordSubmission) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *WordSubmission) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

type WordSubmissionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accepted      bool                   `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	GameId        string                 `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WordSubmissionResponse) Reset() {
	*x = WordSubmissionResponse{}
	mi := &file_kmig_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WordSubmissionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordSubmissionResponse) ProtoMessage() {}

func (x *WordSubmissionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kmig_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordSubmissionResponse.ProtoReflect.Descriptor instead.
func (*WordSubmissionResponse) Descriptor() ([]byte, []int) {
	return file_kmig_proto_rawDescGZIP(), []int{9}
}

func (x *WordSubmissionResponse) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

func (x *WordSubmissionResponse) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *WordSubmissionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_kmig_proto protoreflect.FileDescriptor

var file_kmig_proto_rawDesc = string([]byte{
	0x0a, 0x0a, 0x6b, 0x6d, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6b, 0x6d,
	0x69, 0x67, 0x22, 0x2e, 0x0a, 0x13, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x67, 0x0a, 0x14, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x2d, 0x0a, 0x12, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x66, 0x0a, 0x13, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x3f, 0x0a, 0x0b, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d,
	0x65, 0x49, 0x64, 0x22, 0x7a, 0x0a, 0x0c, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x2b, 0x0a, 0x10, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0xa0, 0x01, 0x0a,
	0x11, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x64, 0x57,
	0x6f, 0x72, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x75, 0x72, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x54, 0x75, 0x72, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x56, 0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x64, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d,
	0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x67, 0x0a, 0x16, 0x57, 0x6f, 0x72, 0x64, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x32, 0xe4, 0x02, 0x0a, 0x04, 0x4b, 0x6d, 0x69, 0x67, 0x12, 0x4e, 0x0a, 0x15, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x2e, 0x6b, 0x6d, 0x69, 0x67, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x6b, 0x6d, 0x69, 0x67, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x14, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x2e, 0x6b, 0x6d, 0x69, 0x67, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6b, 0x6d,
	0x69, 0x67, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x13, 0x4a, 0x6f, 0x69, 0x6e, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x11, 0x2e,
	0x6b, 0x6d, 0x69, 0x67, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x12, 0x2e, 0x6b, 0x6d, 0x69, 0x67, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x57, 0x6f,
	0x72, 0x64, 0x12, 0x14, 0x2e, 0x6b, 0x6d, 0x69, 0x67, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x1c, 0x2e, 0x6b, 0x6d, 0x69, 0x67, 0x2e,
	0x57, 0x6f, 0x72, 0x64, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x6b, 0x6d, 0x69, 0x67, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x6b, 0x6d, 0x69, 0x67, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_kmig_proto_rawDescOnce sync.Once
	file_kmig_proto_rawDescData []byte
)

func file_kmig_proto_rawDescGZIP() []byte {
	file_kmig_proto_rawDescOnce.Do(func() {
		file_kmig_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kmig_proto_rawDesc), len(file_kmig_proto_rawDesc)))
	})
	return file_kmig_proto_rawDescData
}

var file_kmig_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_kmig_proto_goTypes = []any{
	(*SinglePlayerRequest)(nil),    // 0: kmig.SinglePlayerRequest
	(*SinglePlayerResponse)(nil),   // 1: kmig.SinglePlayerResponse
	(*MultiplayerRequest)(nil),     // 2: kmig.MultiplayerRequest
	(*MultiplayerResponse)(nil),    // 3: kmig.MultiplayerResponse
	(*JoinRequest)(nil),            // 4: kmig.JoinRequest
	(*JoinResponse)(nil),           // 5: kmig.JoinResponse
	(*GameStateRequest)(nil),       // 6: kmig.GameStateRequest
	(*GameStateResponse)(nil),      // 7: kmig.GameStateResponse
	(*WordSubmission)(nil),         // 8: kmig.WordSubmission
	(*WordSubmissionResponse)(nil), // 9: kmig.WordSubmissionResponse
}
var file_kmig_proto_depIdxs = []int32{
	0, // 0: kmig.Kmig.StartSinglePlayerGame:input_type -> kmig.SinglePlayerRequest
	2, // 1: kmig.Kmig.StartMultiplayerGame:input_type -> kmig.MultiplayerRequest
	4, // 2: kmig.Kmig.JoinMultiplayerGame:input_type -> kmig.JoinRequest
	8, // 3: kmig.Kmig.SubmitWord:input_type -> kmig.WordSubmission
	6, // 4: kmig.Kmig.GetGameState:input_type -> kmig.GameStateRequest
	1, // 5: kmig.Kmig.StartSinglePlayerGame:output_type -> kmig.SinglePlayerResponse
	3, // 6: kmig.Kmig.StartMultiplayerGame:output_type -> kmig.MultiplayerResponse
	5, // 7: kmig.Kmig.JoinMultiplayerGame:output_type -> kmig.JoinResponse
	9, // 8: kmig.Kmig.SubmitWord:output_type -> kmig.WordSubmissionResponse
	7, // 9: kmig.Kmig.GetGameState:output_type -> kmig.GameStateResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_kmig_proto_init() }
func file_kmig_proto_init() {
	if File_kmig_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kmig_proto_rawDesc), len(file_kmig_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kmig_proto_goTypes,
		DependencyIndexes: file_kmig_proto_depIdxs,
		MessageInfos:      file_kmig_proto_msgTypes,
	}.Build()
	File_kmig_proto = out.File
	file_kmig_proto_goTypes = nil
	file_kmig_proto_depIdxs = nil
}
